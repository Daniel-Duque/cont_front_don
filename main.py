#Original From Daniel Duque Lozano
# -*- coding: utf-8 -*-
"""analisis_territorial.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AQnWOCqJUWkHUKJg-HgLbDXsLa72uWoS
"""


import pandas as pd
import os
import plotly.express as px
import matplotlib.pyplot as plt
from plotly.subplots import make_subplots
import plotly.graph_objs as go
import geopandas as gp
import seaborn
import streamlit as st
import matplotlib as mpl

st.set_page_config(layout='wide')


filtrado1=pd.read_csv(r"data/dicc/Ciudades.csv").sort_values(["Departamento Entidad","Ciudad Entidad"],ascending=False)

extrange="Tamaño valor extraño"

resulting=pd.concat([pd.read_csv(r"data/cleaned1.csv"),pd.read_csv(r"data/cleaned2.csv")]).reset_index()

st.title("Banderas rojas contratación pública preliminar (valores en millones de pesos)")
pd.set_option("styler.render.max_elements", 864344)
tab1,tab2,tab3,tab0 = st.tabs(['mapas :D',"prediction quality","ingresos",'selección'])

    
agroupados=pd.read_csv(r"data/groupedcit.csv")
df = gp.read_file(r"data/maps/MGN_MPIO_POLITICO.shp") 
df=df.merge(agroupados, how="left",left_on=["MPIO_CNMBR","DPTO_CNMBR"],
            right_on=["Ciudad Entidad","Departamento Entidad"])    

#
    
with tab1:
    depto=st.selectbox("Departamento Entidad",
                       pd.unique(filtrado1["Departamento Entidad"]),key=1)
    

    premap=filtrado1[filtrado1["Departamento Entidad"]==depto]
    
  
    submap=df[df["DPTO_CNMBR"]==depto]    

    fig = px.choropleth(submap, geojson=submap.geometry, locations=submap.index,
                        color=submap["Tamaño valor extraño"], color_continuous_scale='inferno_r')
    fig.update_geos(fitbounds="locations", visible=False)
    st.plotly_chart(fig)
    
with tab2:
    
    fig, axs = plt.subplots(nrows=1, ncols=1)
    df_clean=df.dropna()
    axs.hist2d(df_clean["Valor real"],df_clean["Valor Proyectado"],density=True,range=[[0,5e5],[0,5e5]],norm=mpl.colors.LogNorm(), #cmap=mpl.cm.gray
                     bins=100)

    st.pyplot(fig)

with tab3:
    agru=resulting.groupby(["Entidad"]).sum()
    agru=agru.sort_values("veces la predicción",ascending=False)
    st.dataframe(agru.style.background_gradient(axis=None, cmap="Reds"))
    
with tab0:
  
    
    
    
    resulting=resulting[["Entidad","Descripción del Procedimiento","Tipo de Contrato",
                         "Valor real","Valor Proyectado",extrange,"Similitud de valor",
                         "veces la predicción"]]      

    
    st.dataframe(resulting.style.background_gradient(axis=None, cmap="Reds"))