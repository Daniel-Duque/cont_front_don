#Original From Daniel Duque Lozano
# -*- coding: utf-8 -*-
"""analisis_territorial.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AQnWOCqJUWkHUKJg-HgLbDXsLa72uWoS
"""


import pandas as pd
import os
import plotly.express as px
import matplotlib.pyplot as plt
from plotly.subplots import make_subplots
import plotly.graph_objs as go
import geopandas as gp
import seaborn
import streamlit as st
import matplotlib as mpl
import datetime
st.set_page_config(layout='wide')


filtrado1=pd.read_csv(r"data/dicc/Ciudades.csv").sort_values(["Departamento Entidad","Ciudad Entidad"],ascending=False)

extrange="Tamaño valor extraño"

resulting=pd.read_csv(r"data/cleaned0.csv")

st.title("Banderas rojas contratación pública preliminar (valores en millones de pesos)")
pd.set_option("styler.render.max_elements", 864344)
tab0,tab1,tab2,tab3,tab4,tab5= st.tabs(["Corrupción cero",'mapas',"Calidad de la predicción","Acumulado por entidades",'Diez mil contratos mas extraños',"comunicación"])

    
agroupados=pd.read_csv(r"data/groupedcit.csv")
df = gp.read_file(r"data/maps/MGN_MPIO_POLITICO.shp") 
df=df.merge(agroupados, how="left",left_on=["MPIO_CNMBR","DPTO_CNMBR"],
            right_on=["Ciudad Entidad","Departamento Entidad"])    

today = datetime.datetime.now()
year = today.year 
jan_1 = datetime.date(year-1, 1, 1)
dec_31 = datetime.date(year, 12, 31)




with tab0:
  
    depto=st.selectbox("Departamento Entidad",
                       pd.unique(filtrado1["Departamento Entidad"]),key=2)
    muni=st.selectbox("Ciudad Entidad",
                       pd.unique(filtrado1[filtrado1["Departamento Entidad"]==depto]["Ciudad Entidad"]),key=3)
    #text search taken from https://blog.streamlit.io/create-a-search-engine-with-streamlit-and-google-sheets/



    on = st.toggle("Opciones extra")
    text_search=""
    ini=jan_1
    fini=dec_31
    
    if on:
        text_search = st.text_input("Busca contratos en tu ciudad.", value="")

        
        d = st.date_input(
            "",
            (jan_1, datetime.date(year, 1, 7)),
            jan_1,
            dec_31,
            format="MM.DD.YYYY",
        )
        ini=d[0]
        try:
            fini=d[1]
        except:
            ...
    linksave=r"data/particular"
    terri=pd.read_csv(linksave+"//"+depto.upper()+"-"+muni.upper()+"0"+".csv")[["Nombre Entidad",
            "Descripcion del Proceso","Tipo de Contrato","Fecha de Firma",
            "Valor real","Valor Proyectado",extrange,"URLProceso"]]
    terri["Fecha de Firma"]=pd.to_datetime(terri["Fecha de Firma"], format='%m/%d/%Y').dt.date
    terri=terri[terri["Fecha de Firma"]>ini]
    terri=terri[terri["Fecha de Firma"]<=fini]            
    m1 = terri["Descripcion del Proceso"].str.lower().str.contains(text_search,case=False)
    df_search = terri[m1]
    if text_search:
        st.dataframe(df_search .style.background_gradient(axis=None, cmap="Reds"))
    else:
        st.dataframe(terri.style.background_gradient(axis=None, cmap="Reds"))    
    
    
 
with tab1:
    depto=st.selectbox("Departamento Entidad",
                       pd.unique(filtrado1["Departamento Entidad"]),key=1)
    

    premap=filtrado1[filtrado1["Departamento Entidad"]==depto]
    
  
    submap=df[df["DPTO_CNMBR"]==depto]    

    fig = px.choropleth(submap, geojson=submap.geometry, locations=submap.index,
                        color=submap["Tamaño valor extraño"], color_continuous_scale='inferno_r')
    fig.update_geos(fitbounds="locations", visible=False)
    st.plotly_chart(fig)
    
with tab2:
    
    fig, axs = plt.subplots(nrows=1, ncols=1)
    df_clean=df.dropna()
    axs.hist2d(resulting["Valor real"],resulting["Valor Proyectado"],density=True,range=[[0,5e3],[0,5e3]],norm=mpl.colors.LogNorm(), #cmap=mpl.cm.gray
                     bins=50)

    st.pyplot(fig)

with tab3:
    agru=pd.read_csv(r"data/groupedent.csv")
    agru=agru.sort_values("veces la predicción",ascending=False)
    st.dataframe(agru.style.background_gradient(axis=None, cmap="Reds"))
    
with tab4:
    resulting2=resulting[["Nombre Entidad","Descripcion del Proceso","Tipo de Contrato","Género Representante Legal",
                         "Valor real","Valor Proyectado",extrange,"Similitud de valor","veces la predicción","URLProceso"]][0:1000]      

    
    st.dataframe(resulting2.style.background_gradient(axis=None, cmap="Reds"))   
    
with tab5:
  
    
    
    
    resultingcom=pd.read_csv(r"data/cleanedcomu"+".csv")   

    
    st.dataframe(resultingcom.style.background_gradient(axis=None, cmap="Reds"))  